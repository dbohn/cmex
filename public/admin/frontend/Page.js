// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone'], function(_, Backbone) {
    var Page, TemplateCollection, TemplateModel, _ref, _ref1, _ref2;

    TemplateModel = (function(_super) {
      __extends(TemplateModel, _super);

      function TemplateModel() {
        _ref = TemplateModel.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      TemplateModel.prototype.toString = function() {
        return this.get('name');
      };

      return TemplateModel;

    })(Backbone.Model);
    TemplateCollection = (function(_super) {
      __extends(TemplateCollection, _super);

      function TemplateCollection() {
        _ref1 = TemplateCollection.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      TemplateCollection.prototype.url = 'admin/frontend/template-list';

      TemplateCollection.prototype.model = TemplateModel;

      return TemplateCollection;

    })(Backbone.Collection);
    return Page = (function(_super) {
      __extends(Page, _super);

      function Page() {
        _ref2 = Page.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      Page.prototype.urlRoot = 'admin/frontend/page';

      Page.prototype.schema = {
        title: {
          type: 'Text',
          title: 'Seitentitel'
        },
        identifier: 'Text',
        template: {
          type: 'Select',
          options: new TemplateCollection()
        }
      };

      return Page;

    })(Backbone.Model);
  });

}).call(this);
